with open('C:/users/rwillia8/Desktop/Day16Input.txt') as file:
    data = file.readlines()
    data = [ line.strip() for line in data ]
    fields, tickets = [], []

    for line in data: #separate out the beginning line data from the ticket data
        if 'or' in line:
            fields.append(line)
        elif ',' in line:
            tickets.append(line)

def get_ranges():
    ranges = {}
    for line in fields:
        line = line.split(': ')
        field = line[0]
        line = line[1]. split(' or ')
        A, B = line[0].split('-'), line[1].split('-')
        lower = (int(A[0]), int(A[1]))
        upper = (int(B[0]), int(B[1]))
        ranges[field] = (lower, upper)
    return ranges

get_ranges()

def find_invalids():
    ranges = get_ranges()
    invalid = []
    valid_ticks = []

    for line in tickets:
        line = line.split(',')
        ticket = [ int(num) for num in line ]

        valid_ticket = True
        for num in ticket:
            valid_num = False
            for f, r in ranges.items():
                a1, b1, a2, b2 = r[0][0], r[0][1], r[1][0], r[1][1]
                if num in range(a1, b1+1) or num in range(a2, b2+1):
                    valid_num = True
                    break
            if not valid_num:
                invalid.append(num)
                valid_ticket = False
        if valid_ticket:
            valid_ticks.append(ticket)

    return sum(invalid), valid_ticks

num, valid_ticks = find_invalids()

print(num)

# for ticket in valid_ticks:
#     print(ticket)

def solve_fields():
    ranges = get_ranges()
    valid_cols = {}
    for field, r in ranges.items():
        valid_cols[field] = []
        a1, b1, a2, b2 = r[0][0], r[0][1], r[1][0], r[1][1]
        for i in range(len(valid_ticks[0])):
            found = True
            for ticket in valid_ticks:
                num = ticket[i]
                if not (num in range(a1, b1+1) or num in range(a2, b2+1)):
                    found = False
                    break
            if found:
                valid_cols[field].append(i)
    solved_indices = []
    solved_fields = {}
    for i in range(len(fields)):
        for field, possible_cols in valid_cols.items():
            if len(possible_cols) == i+1:
                for j in possible_cols:
                    if j not in solved_indices:
                        solved_indices.append(j)
                        solved_fields[field] = j
                        break
    # for i, j in solved_fields.items():
    #     print(i,j)
    total = 1
    for field, col in solved_fields.items():
        if 'departure' in field:
            total *= valid_ticks[0][col]
    return total
print(solve_fields())
